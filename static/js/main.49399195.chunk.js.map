{"version":3,"sources":["../public/images sync /^/.//.*$","data/projects.txt","../public/images/hangman.png","../public/images/js-scrabble.png","../public/images/litterpatrol.png","../public/images/mediaranker.png","../public/images/pickaflick.png","../public/images/profile.png","../public/images/recipedia.png","../public/images/robot-chat.png","../public/images/scrabble.png","../public/images/sweetsy.png","../public/images/trek.png","../public/images/videostore.png","components/Project.js","components/ProjectCollection.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["map","./hangman.png","./js-scrabble.png","./litterpatrol.png","./mediaranker.png","./pickaflick.png","./profile.png","./recipedia.png","./robot-chat.png","./scrabble.png","./sweetsy.png","./trek.png","./videostore.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Project","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","title","width","height","src","picture","alt","href","link","summary","tags","Component","images","require","ProjectCollection","_this","componentDidMount","fetch","data","then","resp","text","setState","projects","JSON","parse","catch","err","console","log","renderProjects","state","elem","index","screenshot","src_components_Project","key","image","Sidebar","profile","target","rel","App","src_components_Sidebar","src_components_ProjectCollection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gFAAA,IAAAA,EAAA,CACAC,gBAAA,GACAC,oBAAA,GACAC,qBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,gBAAA,GACAC,kBAAA,GACAC,mBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,aAAA,GACAC,mBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAf,EAAAc,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAArB,IAEAa,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBClCAS,EAAAC,QAAiBR,EAAAS,EAAuB,qJCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,sDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iMC+BzBC,qBA1Bb,SAAAA,EAAYC,GAAQ,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAH,GAAAL,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAK,GAAAM,KAAAH,6EAalB,OACEI,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,UAAKN,KAAKF,MAAMU,OAChBJ,EAAAC,EAAAC,cAAA,OAAKG,MAAM,QAAQC,OAAO,QAAQC,IAAKX,KAAKF,MAAMc,QAASC,IAAI,uBAAsBT,EAAAC,EAAAC,cAAA,WACrFF,EAAAC,EAAAC,cAAA,KAAGQ,KAAMd,KAAKF,MAAMiB,MAAOf,KAAKF,MAAMiB,MACtCX,EAAAC,EAAAC,cAAA,SAAIN,KAAKF,MAAMkB,SACfZ,EAAAC,EAAAC,cAAA,SAAIN,KAAKF,MAAMmB,cApBDC,8BCChBC,SAASC,MA8CAC,cA3Cd,SAAAA,EAAYvB,GAAO,IAAAwB,EAAA,OAAA9B,OAAAO,EAAA,EAAAP,CAAAQ,KAAAqB,IAClBC,EAAA9B,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAA6B,GAAAlB,KAAAH,KAAMF,KAOPyB,kBAAoB,WAClBC,MAAMC,KACLC,KAAM,SAAAC,GAAI,OAAIA,EAAKC,SACnBF,KAAM,SAAAC,GAAI,OACVL,EAAKO,SAAS,CAACC,SAAUC,KAAKC,MAAML,OAEpCM,MAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAdVZ,EAiBnBe,eAAiB,WAchB,OAbef,EAAKgB,MAAMR,SAAS5D,IAAI,SAACqE,EAAMC,GAC7C,IAAIC,EAActB,EAAOoB,EAAK3B,SAC9B,OACCR,EAAAC,EAAAC,cAACoC,EAAD,CACCC,IAAKH,EACLhC,MAAO+B,EAAK/B,MACZQ,QAASuB,EAAKvB,QACdJ,QAAS6B,EACT1B,KAAMwB,EAAKxB,KACXE,KAAMsB,EAAKtB,UAxBdK,EAAKgB,MAAQ,CACZR,SAAU,IAJOR,wEAmClB,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbP,KAAKqC,yBAtCqBnB,aCJ1B0B,SAAQxB,MAiBCyB,mLAZX,IAAIC,EAAWF,EAAM,iBACrB,OACExC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUE,MAAM,QAAQC,OAAO,QAAQC,IAAKmC,EAASjC,IAAI,YAAgBT,EAAAC,EAAAC,cAAA,WACxFF,EAAAC,EAAAC,cAAA,6JAAoJF,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,6BAA6BiC,OAAO,SAASC,IAAI,uBAAzD,UAApJ,aATc9B,aCeP+B,qBAdb,SAAAA,EAAanD,GAAQ,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAiD,GAAAzD,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAyD,GAAA9C,KAAAH,6EAKnB,OACEI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACdH,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAmB1C,MAAM,kBATfS,cCOEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,KAAK,SAAAuC,GACjCA,EAAaC","file":"static/js/main.49399195.chunk.js","sourcesContent":["var map = {\n\t\"./hangman.png\": 22,\n\t\"./js-scrabble.png\": 23,\n\t\"./litterpatrol.png\": 24,\n\t\"./mediaranker.png\": 25,\n\t\"./pickaflick.png\": 26,\n\t\"./profile.png\": 27,\n\t\"./recipedia.png\": 28,\n\t\"./robot-chat.png\": 29,\n\t\"./scrabble.png\": 30,\n\t\"./sweetsy.png\": 31,\n\t\"./trek.png\": 32,\n\t\"./videostore.png\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7;","module.exports = __webpack_public_path__ + \"static/media/projects.d48890fc.txt\";","module.exports = __webpack_public_path__ + \"static/media/hangman.f7c8f3d0.png\";","module.exports = __webpack_public_path__ + \"static/media/js-scrabble.15c83b84.png\";","module.exports = __webpack_public_path__ + \"static/media/litterpatrol.284a3868.png\";","module.exports = __webpack_public_path__ + \"static/media/mediaranker.f81bd0ff.png\";","module.exports = __webpack_public_path__ + \"static/media/pickaflick.716b15f8.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.3de17e38.png\";","module.exports = __webpack_public_path__ + \"static/media/recipedia.3f57bff5.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-chat.5e7d1297.png\";","module.exports = __webpack_public_path__ + \"static/media/scrabble.57dfe4db.png\";","module.exports = __webpack_public_path__ + \"static/media/sweetsy.9e186a1f.png\";","module.exports = __webpack_public_path__ + \"static/media/trek.b8d14e39.png\";","module.exports = __webpack_public_path__ + \"static/media/videostore.8d64d9ea.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Project.css';\n\nclass Project extends Component {\n  constructor(props) {\n    super()\n  }\n\n  static propTypes = {\n    title: PropTypes.string, \n    summary: PropTypes.string,\n    picture: PropTypes.string,\n    link: PropTypes.string,\n    tags: PropTypes.string\n  } \n\n  render() {\n    return (\n      <article className=\"article\">\n        <h2>{this.props.title}</h2>\n        <img width=\"350em\" height=\"230em\" src={this.props.picture} alt=\"project screenshot\"/><br></br>\n        <a href={this.props.link}>{this.props.link}</a>\n        <p>{this.props.summary}</p>\n        <p>{this.props.tags}</p>\n      </article>\n    );\n  }\n\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport Project from './Project.js';\nimport data from '../data/projects.txt';\nimport './ProjectCollection.css';\n\nconst images = require.context('../../public/images', true);\n\nclass ProjectCollection extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tprojects: []\n\t\t}\n\t}\n\t\n\tcomponentDidMount = () => {\n\t\t\tfetch(data)\n\t\t\t.then( resp => resp.text())\n\t\t\t.then( resp =>\n\t\t\t\tthis.setState({projects: JSON.parse(resp)}) \n\t\t\t\t)\n\t\t\t.catch( err => console.log(err))\n\t}\n   \t\n\trenderProjects = () => {\n\t\tlet projects = this.state.projects.map((elem, index) => {\n\t\t\tlet screenshot = (images(elem.picture));\n\t\t\treturn (\n\t\t\t\t<Project\n\t\t\t\t\tkey={index}\n\t\t\t\t\ttitle={elem.title}\n\t\t\t\t\tsummary={elem.summary}\n\t\t\t\t\tpicture={screenshot}\n\t\t\t\t\tlink={elem.link}\n\t\t\t\t\ttags={elem.tags}\n\t\t\t\t/>\n\t\t\t)\n\t\t});\n\t\treturn projects;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{this.renderProjects()}\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default ProjectCollection;","import React, { Component } from 'react';\nimport './Sidebar.css';\n\nconst image = require.context('../../public/images', true);\n\nclass Sidebar extends Component {\n\n  render() {\n    let profile = (image('./profile.png'));\n    return (\n      <section>\n        <h1>Alexandria Brown</h1>\n        <h3>Full-stack Software Developer</h3>\n        <img className=\"profile\" width=\"130em\" height=\"150em\" src={profile} alt=\"profile\"></img><br></br>\n        <sub>Hello! This is an in-progress snapshot of my projects. Some are deployed, others link to GitHub repos. Feel free to browse more projects on my <a href=\"https://github.com/brownav\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>.</sub>\n      </section>\n    );\n  }\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport ProjectCollection from './components/ProjectCollection.js';\nimport Sidebar from './components/Sidebar.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props) {\n    super();\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <Sidebar></Sidebar>\n        <ProjectCollection width=\"300em\"></ProjectCollection>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}